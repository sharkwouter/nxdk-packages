name: Package

on:
  push:
  pull_request:
  repository_dispatch:
    type: [rebuild]
  workflow_dispatch:

jobs:
  build_order:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Get build order
        id: set-build-order
        run: |
          echo "build_order=$(./get_depends.py)" >> $GITHUB_OUTPUT
          echo "container=$(echo ghcr.io/${{ github.repository_owner }}/nxdk|tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT
    outputs:
      build_order: ${{ steps.set-build-order.outputs.build_order }}
      container:  ${{ steps.set-build-order.outputs.container }}

  build:
    needs: [build_order]
    runs-on: ubuntu-latest
    container: ${{ needs.build_order.outputs.container }}
    strategy:
      fail-fast: false
      matrix:
        package: ${{ fromJson(needs.build_order.outputs.build_order) }}
    steps:
      - uses: actions/checkout@v3
      - name: Prepare pacman
        run: |
          mkdir -p /usr/local/nxdk
          mkdir -p /usr/local/nxdk/var/lib/pacman/  /usr/local/nxdk/var/cache/pacman/ /usr/local/nxdk/log /usr/local/nxdk/pacman.d/
          sed -i 's/OPTIONS=(strip/OPTIONS=(!strip/' /etc/makepkg.conf
          cat <<EOF > /etc/pacman.conf
          [options]
          RootDir     = /usr/local/nxdk
          DBPath      = /usr/local/nxdk/var/lib/pacman/
          CacheDir    = /usr/local/nxdk/var/cache/pacman/pkg/
          LogFile     = /usr/local/nxdk/var/log/pacman.log
          GPGDir      = /usr/local/nxdk/etc/pacman.d/gnupg/
          HookDir     = /usr/local/nxdk/etc/pacman.d/hooks/
          Architecture = x86
          LocalFileSigLevel = Optional
          EOF
          eval $(/usr/local/nxdk/bin/activate -s)
      - name: Build package
        run: |
          for f in ${{ matrix.package }}; do
          chown -R nobody:nobody $f
          cd $f
          sudo -u nobody makepkg -p NXBUILD --cleanbuild --ignorearch --noconfirm
          pacman -U --noconfirm *.pkg.* --overwrite '*'
          cd ..
          done
      - uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ${{ env.PACKAGE }}/*.pkg.tar.gz
